name: Test

on:
  pull_request:
    branches: [ main, dev, production ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-models:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    env:
      working-directory: ./flask-gripau
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        working-directory: ${{env.working-directory}}
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        working-directory: ${{env.working-directory}}
      - name: Test with pytest and check coverage
        run: |
          pytest --cache-clear --cov=. Testing/ > pytest-coverage.txt
          cat pytest-coverage.txt
        working-directory: ${{env.working-directory}}
      - name: Report coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: ${{env.working-directory}}/pytest-coverage.txt
  test-api:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    env:
      flask-directory: ./flask-gripau
      vue-directory: ./vue-gripau
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        working-directory: ${{ env.flask-directory }}
     - name: Setup Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v2
       with:
         node-version: ${{ matrix.node-version }}
         cache: 'npm'
         cache-dependency-path: vue-gripau/package-lock.json
      - name: run app
        run: |
          flask db init
          flask db migrate
          flask db upgrade
          python add_data.py
          python app.py &
        working-directory: ${{ env.flask-directory }}
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          project: ${{ env.vue-directory }}